apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))



android {
     signingConfigs {
         config {
             storeFile file(keystoreProperties['storeFile'])
             keyAlias keystoreProperties['keyAlias']
             keyPassword keystoreProperties['keyPassword']
             storePassword keystoreProperties['storePassword']
         }
     }
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.jk.mr.duo.clock"
        minSdkVersion 17
        targetSdkVersion 29
        multiDexEnabled true
        versionCode 10
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField 'String', 'PLACE_KEY', PLACE_KEY
        buildConfigField 'String', 'MAP_TIMEZONE_KEY', MAP_TIMEZONE_KEY

    }
    /* flavorDimensions "mode"

    productFlavors {
        free {
            applicationIdSuffix ".free"
            dimension "mode"
        }
        paid {
            applicationIdSuffix ".paid"
            dimension "mode"
        }
    }*/

    buildTypes {
        release {
            minifyEnabled false
           // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //   buildConfigField 'String', 'GoogleSecAPIKEY', mapkey

              signingConfig signingConfigs.config
        }
    }
    buildToolsVersion = '29.0.0 rc1'
}

dependencies {


    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Dagger 2
    implementation 'com.google.dagger:dagger:2.21'
    implementation 'com.google.firebase:firebase-core:17.0.1'
    kapt 'com.google.dagger:dagger-compiler:2.21'
    //   implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

//Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    //Retrofit adapter for rx
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    //Json Converter
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    //RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-places-v7:0.7.0'

    implementation 'com.github.rtugeek:colorseekbar:1.7.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //implementation 'androidx.vectordrawable:vectordrawable:1.1.0-alpha01'
    testImplementation 'junit:junit:4.13-beta-2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta01'

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha09'
    //implementation 'com.github.skydoves:colorpickerpreference:1.0.3'
    //implementation 'androidx.legacy:legacy-support-v13:1.0.0'

    //implementation "android.arch.work:work-runtime-ktx:1.0.0"

    /* configurations{
         all*.exclude group: 'com.google.guava', module: 'listenablefuture'
     }*/
}

apply plugin: 'com.google.gms.google-services'
